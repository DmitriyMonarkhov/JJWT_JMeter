<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import io.jsonwebtoken.SignatureAlgorithm;
import java.security.KeyFactory;
import java.security.PrivateKey;
import java.security.spec.PKCS8EncodedKeySpec;

//Client ID may need to be legit for certain apps
def clientId = &apos;0123456789&apos;

//Private Key Info
def PRIV_KEY = &apos;YOUR_PRIVATE_KEY_HERE&apos;;

byte[] encodedKey = Base64.getDecoder().decode(PRIV_KEY)
PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encodedKey);
KeyFactory kf = KeyFactory.getInstance(&quot;RSA&quot;);
PrivateKey privKey = kf.generatePrivate(keySpec);

def jwt = io.jsonwebtoken.Jwts.builder()
 	   .setHeaderParam(&quot;alg&quot;, &quot;RS256&quot;)
 	   .setHeaderParam(&quot;typ&quot;, &quot;JWT&quot;)
 	   .setSubject(clientId)
 	   .setNotBefore(new Date() - 5)
 	   .setExpiration(new Date() + 3600) //Add time here to stop JWT expiring during test.
 	   .setIssuer(&quot;https://YOUR_URL&quot;) //CHANGE THIS TO YOUR OWN INFO
 	   .setAudience(&quot;https://YOUR_URL&quot;) //CHANGE THIS TO YOUR OWN INFO
 	   .claim(&quot;client_id&quot;, &quot;YOUR_CLIENT_ID&quot;) //CHANGE THIS TO YOUR OWN INFO
 	   .claim(&quot;auth_time&quot;, new Date())
 	   .claim(&quot;idp&quot;, &quot;YOUR_IDENTITY_PROVIDER&quot;) //CHANGE THIS TO YOUR OWN INFO
 	   .claim(&quot;name&quot;, &quot;Joe Bloggs&quot;)
 	   .claim(&quot;oid&quot;, clientId)
 	   .claim(&quot;email&quot;, &quot;Joe.Bloggs@sainsburys.co.uk&quot;)
 	   .claim(&quot;scope&quot;, &quot;openid profile email colleague.assignments&quot;)
 	   .claim(&quot;amr&quot;, &quot;external&quot;)
        .signWith(SignatureAlgorithm.RS256, privKey)
        .compact()

vars.put(&quot;jwt&quot;,jwt)

//OUTPUT THE TOKEN
log.info(&quot;******************************************************************************&quot;)
log.info(jwt)
log.info(&quot;******************************************************************************&quot;)
</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
